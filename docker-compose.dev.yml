# docker-compose.dev.yml - Hybrid approach
services:
  # Backend development server
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: backend-dev
    ports:
      - "9443:9443"
    environment:
      - NX_DAEMON=false
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=9443
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-lgtm:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=backend
      - CONTENTFUL_SPACE_ID=${CONTENTFUL_SPACE_ID}
      - CONTENTFUL_API_KEY=${CONTENTFUL_API_KEY}
      - CONTENTFUL_PREVIEW_KEY=${CONTENTFUL_PREVIEW_KEY}
      - CONTENTFUL_MANAGEMENT_API_ACCESS_TOKEN=${CONTENTFUL_MANAGEMENT_API_ACCESS_TOKEN}
      - CONTENTFUL_ENVIRONMENT=${CONTENTFUL_ENVIRONMENT}
    volumes:
      # Mount the entire source directory for full workspace sync
      - ./:/app
      # But exclude node_modules - use the ones from the container
      - /app/node_modules
      - ./tsconfig.json:/app/tsconfig.json
      - ./.eslintrc.json:/app/.eslintrc.json
    depends_on:
      - otel-lgtm
      - redis
    restart: unless-stopped
    networks:
      - app-network

  # Frontend development server
  blog-frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: frontend-dev
    ports:
      - "8443:4200"  # Map container's 4200 to host's 8443
    environment:
      - NX_DAEMON=false
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=4200  # Remix uses this port
    volumes:
      # Only mount source code, not node_modules
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./packages:/app/packages
      - ./nx.json:/app/nx.json
      - ./package.json:/app/package.json
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./tsconfig.base.json:/app/tsconfig.base.json
    depends_on:
      - backend-dev
    restart: unless-stopped
    networks:
      - app-network

  # Nginx reverse proxy
  nginx-dev:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx-certs:/etc/nginx/certs:ro
    depends_on:
      - blog-frontend-dev
      - backend-dev
    restart: unless-stopped
    networks:
      - app-network

  # Redis database
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  # Observability stack
  otel-lgtm:
    image: docker.io/grafana/otel-lgtm:latest
    ports:
      - "3002:3000"
      - "4317:4317"
      - "4318:4318"
    environment:
      - OTEL_METRIC_EXPORT_INTERVAL=500
    restart: unless-stopped
    networks:
      - app-network

volumes:
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
